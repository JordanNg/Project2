def setup
	@frames_per_cycle = 60 * 60 * 1.8
	color_mode(HSB, @frames_per_cycle, 100, 100)
	size 600, 600
	background 0
	@hue = 0
 	@degrees = 270.0
 	@degreeshour = 270.0
end

class DrawCircle
  def initialize(typeCircle)
    if typeCircle == "minute" then
      t = MATH::PI*2.0/360 * 0.00166666
    else 
      t = MATH::PI*2.0/360 * hournumber
      fi
  end 

  def circle r, theta
    x = x_from_polar(r, theta)
    y = y_from_polar(r, theta)

    fill_color_left_to_right
     @hue = @hue + 1
     @hue = @hue % @frames_per_cycle

    ellipse x, y, circle_diameter, circle_diameter
  end

  def draw
    translate width/2.0, height/2.0
    radius = 200
    circle radius, t
  end
end

def draw
circlehour = DrawCircle.new("minute", 200)
circlehour.draw()
end

def circle_diameter
	max(30, 30)
end

def fill_color_left_to_right
	fill(@hue, 100, 100)
end

def x_from_polar(r, theta)
  return r * Math.cos(theta)
end

def y_from_polar(r, theta)
  return r * Math.sin(theta)
end